name: CI/CD - Docker Build, Push & Deploy to K8s

on:
  push:
    branches:
      - master  # Or 'main' if that's your default branch

env:
  IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/mywebapp
  KUBE_VERSION: 1.29.0  # Match your cluster version
  kumar: default  # Or your preferred namespace

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push Docker image
      run: |
        docker build -t $IMAGE_NAME:latest -t $IMAGE_NAME:$GITHUB_SHA .
        docker push $IMAGE_NAME:latest
        docker push $IMAGE_NAME:$GITHUB_SHA

    - name: Install kubectl
      run: |
        curl -LO "https://dl.k8s.io/release/v$KUBE_VERSION/bin/linux/amd64/kubectl"
        sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
        kubectl version --client

    - name: Configure Kubernetes
      run: |
        mkdir -p ~/.kube
        echo "${{ secrets.KUBE_CONFIG_DATA }}" | base64 -d > ~/.kube/config
        chmod 600 ~/.kube/config
        kubectl config view
        kubectl cluster-info

    - name: Deploy to Kubernetes
      run: |
        # Create namespace if it doesn't exist
        kubectl create namespace $kumar --dry-run=client -o yaml | kubectl apply -f -
        
        # Replace image placeholder in deployment
        sed -i "s|\$IMAGE_NAME|$IMAGE_NAME:$GITHUB_SHA|g" k8s/deployment.yaml
        
        # Apply all manifests
        kubectl apply -f k8s/ -n $kumar
        
        # Verify deployment
        kubectl rollout status deployment/mywebapp -n $kumar
        kubectl get pods,svc -n $kumar -o wide